datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

// Enums for type safety
enum ManagerLevel {
  JUNIOR
  SENIOR
  EXECUTIVE
}

enum EmployeeStatus {
  ACTIVE
  INACTIVE
}

model Manager {
  id          Int           @id @default(autoincrement())
  fullName    String
  managerId   String        @unique // Unique identifier (e.g., M001)
  email       String        @unique
  level       ManagerLevel  // Enum for restricted values
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  employees   Employee[]    @relation("ManagedEmployees")
  addedEmployees Employee[] @relation("AddedBy")
  updatedEmployees Employee[] @relation("UpdatedBy")

  @@index([email])
  @@index([managerId])
}

model Employee {
  id          Int            @id @default(autoincrement())
  fullName    String
  employeeId  String         @unique // Unique identifier (e.g., E001)
  email       String         @unique
  phoneNumber String?
  jobTitle    String
  department  String
  hireDate    DateTime
  salary      Decimal        @default(0.00) // Decimal for precision
  status      EmployeeStatus @default(ACTIVE)
  profilePic  String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  addedById   Int?
  updatedById Int?
  managerId   Int?

  addedBy     Manager?       @relation("AddedBy", fields: [addedById], references: [id], onDelete: SetNull)
  updatedBy   Manager?       @relation("UpdatedBy", fields: [updatedById], references: [id], onDelete: SetNull)
  manager     Manager?       @relation("ManagedEmployees", fields: [managerId], references: [id], onDelete: SetNull)

  @@index([email])
  @@index([employeeId])
  @@index([managerId])
}